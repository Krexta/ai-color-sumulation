name: "deploy-stg"

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: read

env:
  ENV_NAME: stg
  # AWS_ROLE_SESSION_NAME: 0
  AWS_ASSUME_ROLE: arn:aws:iam::688237778601:role/ai-color-simulator-deployer-stg
  REGION: ap-northeast-1
  FRONTEND_APP_DIR: app
  VERSION: ${{ github.sha }}

jobs:
  docker-build-and-push:
    name: "docker build and push"
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.short_sha.outputs.sha_short }}
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      # - name: Copy .env file
      #   run: cp env/.env.example.${{ env.ENV_NAME }} frontend/guide/.env

      - name: Install dependencies, and build
        run: npm install && npm run build
        working-directory: ./app

      - name: Generate short SHA
        id: short_sha
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: AWS Assume Role
        uses: aws-actions/configure-aws-credentials@v1
        id: aws_credentials
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          # role-session-name: ${{ env.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ env.REGION }}

      - name: docker login
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      # - name: docker login
      #   run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: sam build
        run: sam build
      - name: sam deploy
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --config-file samconfig.toml --config-env ${{ env.ENV_NAME }}
